Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_21_2022_8_49_AM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_11_21_2022_8_49_AM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_11_21_2022_8_49_AM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_11_21_2022_8_49_AM__Changes_.xml	
+++ /dev/null	
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_11_21_2022_8_49_AM_[Changes]" date="1668996176281" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_21_2022_8_49_AM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 11/21/2022 8:49 AM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_21_2022_8_49_AM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_11_21_2022_8_49_AM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_11_21_2022_8_49_AM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_11_21_2022_8_49_AM_[Changes]/shelved.patch	
+++ /dev/null	
@@ -1,133 +0,0 @@
-Index: app/src/main/java/com/example/bettinalogistics/ui/activity/gg_map/GoogleMapViewmodel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.bettinalogistics.ui.activity.gg_map\r\n\r\nimport android.content.ContentValues\r\nimport android.util.Log\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.viewModelScope\r\nimport com.example.baseapp.BaseViewModel\r\nimport com.example.bettinalogistics.data.GoogleMapRepo\r\nimport com.example.bettinalogistics.model.AddressData\r\nimport com.google.android.gms.maps.model.LatLng\r\nimport com.google.maps.android.SphericalUtil\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.launch\r\nimport java.io.UnsupportedEncodingException\r\n\r\nclass GoogleMapViewmodel(val googleMapRepo: GoogleMapRepo) : BaseViewModel() {\r\n    var latLonOriginAddress: LatLng? = null\r\n    var latLonDestinationAddress: LatLng? = null\r\n    var distance: String? = null\r\n    var addressData: AddressData? = null\r\n    var calculateDistanceLiveData = MutableLiveData<String?>()\r\n    fun calculateDistance(orderAddress: AddressData) = viewModelScope.launch(Dispatchers.IO) {\r\n        googleMapRepo.calculateDistance(orderAddress) {\r\n           if(!it.isNullOrEmpty()){\r\n               calculateDistanceLiveData.postValue(it)\r\n           }\r\n            else{\r\n               calculateDistanceLiveData.postValue(sendRequest())\r\n           }\r\n        }\r\n    }\r\n\r\n    private fun sendRequest() : String?{\r\n        try {\r\n            val latLonOrigin = latLonOriginAddress?.latitude?.let {\r\n                latLonOriginAddress?.longitude?.let { it1 ->\r\n                    LatLng(\r\n                        it,\r\n                        it1\r\n                    )\r\n                }\r\n            }\r\n            val latLonDestination = latLonDestinationAddress?.let {\r\n                latLonDestinationAddress?.longitude?.let { it1 ->\r\n                    LatLng(\r\n                        it.latitude,\r\n                        it1\r\n                    )\r\n                }\r\n            }\r\n            val distance = SphericalUtil.computeDistanceBetween(latLonOrigin, latLonDestination);\r\n            Log.d(ContentValues.TAG, \"sendRequest: ${distance / 1000} km\")\r\n            return (distance/1000).toString()\r\n        } catch (e: UnsupportedEncodingException) {\r\n            e.printStackTrace()\r\n        }\r\n        return null\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/bettinalogistics/ui/activity/gg_map/GoogleMapViewmodel.kt b/app/src/main/java/com/example/bettinalogistics/ui/activity/gg_map/GoogleMapViewmodel.kt
---- a/app/src/main/java/com/example/bettinalogistics/ui/activity/gg_map/GoogleMapViewmodel.kt	(revision 543c71394d916d6931312efbffc17cf4f990eb1f)
-+++ b/app/src/main/java/com/example/bettinalogistics/ui/activity/gg_map/GoogleMapViewmodel.kt	(date 1668770305897)
-@@ -1,6 +1,7 @@
- package com.example.bettinalogistics.ui.activity.gg_map
- 
- import android.content.ContentValues
-+import android.content.Context
- import android.util.Log
- import androidx.lifecycle.MutableLiveData
- import androidx.lifecycle.viewModelScope
-@@ -8,6 +9,9 @@
- import com.example.bettinalogistics.data.GoogleMapRepo
- import com.example.bettinalogistics.model.AddressData
- import com.google.android.gms.maps.model.LatLng
-+import com.google.maps.DirectionsApi
-+import com.google.maps.DirectionsApiRequest
-+import com.google.maps.GeoApiContext
- import com.google.maps.android.SphericalUtil
- import kotlinx.coroutines.Dispatchers
- import kotlinx.coroutines.launch
-@@ -56,4 +60,13 @@
-         }
-         return null
-     }
-+    val requestApiLiveData = MutableLiveData<DirectionsApiRequest>()
-+    fun requestGgApi(context: GeoApiContext) =  viewModelScope.launch(Dispatchers.IO){
-+        val req = DirectionsApi.getDirections(
-+            context,
-+            "${latLonOriginAddress?.latitude ?: ""},${latLonOriginAddress?.longitude ?: ""}",
-+            "${latLonDestinationAddress?.latitude ?: ""},${latLonDestinationAddress?.longitude ?: ""}"
-+        )
-+        requestApiLiveData.postValue(req)
-+    }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/bettinalogistics/ui/activity/gg_map/GoogleMapActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.bettinalogistics.ui.activity.gg_map\r\n\r\nimport android.Manifest\r\nimport android.annotation.SuppressLint\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.graphics.Bitmap\r\nimport android.graphics.Canvas\r\nimport android.graphics.Color\r\nimport android.location.Address\r\nimport android.location.Geocoder\r\nimport android.location.Location\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport com.directions.route.*\r\nimport com.example.baseapp.BaseActivity\r\nimport com.example.baseapp.view.setSafeOnClickListener\r\nimport com.example.bettinalogistics.R\r\nimport com.example.bettinalogistics.databinding.ActivityGoogleMapBinding\r\nimport com.example.bettinalogistics.model.AddressData\r\nimport com.example.bettinalogistics.model.OrderAddress\r\nimport com.example.bettinalogistics.network.RetrofitApi\r\nimport com.example.bettinalogistics.ui.activity.add_new_order.AddAddressTransactionActivity\r\nimport com.example.bettinalogistics.utils.AppConstant\r\nimport com.example.bettinalogistics.utils.Utils\r\nimport com.google.android.gms.common.ConnectionResult\r\nimport com.google.android.gms.common.api.GoogleApiClient\r\nimport com.google.android.gms.location.FusedLocationProviderClient\r\nimport com.google.android.gms.location.LocationServices\r\nimport com.google.android.gms.maps.CameraUpdateFactory\r\nimport com.google.android.gms.maps.GoogleMap\r\nimport com.google.android.gms.maps.OnMapReadyCallback\r\nimport com.google.android.gms.maps.SupportMapFragment\r\nimport com.google.android.gms.maps.model.*\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.maps.DirectionsApi\r\nimport com.google.maps.GeoApiContext\r\nimport kotlinx.coroutines.async\r\nimport kotlinx.coroutines.runBlocking\r\nimport org.koin.androidx.viewmodel.ext.android.viewModel\r\nimport java.io.IOException\r\n\r\n\r\nclass GoogleMapActivity : BaseActivity(), OnMapReadyCallback, GoogleMap.OnMarkerClickListener,\r\n    GoogleApiClient.OnConnectionFailedListener, RoutingListener {\r\n    private var mMap: GoogleMap? = null\r\n    private var mapFragment: SupportMapFragment? = null\r\n    private var apiInterface: RetrofitApi? = null\r\n    var setOnSearchMapDone: ((Boolean, Boolean) -> Unit)? = null\r\n    override val viewModel: GoogleMapViewmodel by viewModel()\r\n    private lateinit var lastLocation: Location\r\n    private lateinit var fusedLocationClient: FusedLocationProviderClient\r\n\r\n    var myLocation: Location? = null\r\n    var destinationLocation: Location? = null\r\n    protected var start: LatLng? = null\r\n    protected var end: LatLng? = null\r\n\r\n    var locationPermission = false\r\n\r\n    //polyline object\r\n    private var polylines: ArrayList<Polyline>? = null\r\n\r\n    companion object {\r\n        private const val LOCATION_REQUEST_CODE = 1\r\n    }\r\n\r\n    override val binding: ActivityGoogleMapBinding by lazy {\r\n        ActivityGoogleMapBinding.inflate(layoutInflater)\r\n    }\r\n\r\n    override fun initView() {\r\n        mapFragment =\r\n            supportFragmentManager.findFragmentById(R.id.mapLocation) as SupportMapFragment?\r\n        binding.edtOriginSearch.requestFocus()\r\n        mapFragment?.getMapAsync(this);\r\n    }\r\n\r\n    override fun initListener() {\r\n        binding.btnFindPath.setSafeOnClickListener {\r\n            drawMap()\r\n            /*\r\n            if (checkValidate()) {\r\n                val addressData = AddressData(\r\n                    originAddress = binding.edtOriginSearch.getValueText(),\r\n                    originAddressLat = viewModel.latLonOriginAddress?.latitude,\r\n                    originAddressLon = viewModel.latLonOriginAddress?.longitude,\r\n                    destinationAddress = binding.edtDestinationSearch.getValueText(),\r\n                    destinationLat = viewModel.latLonDestinationAddress?.latitude,\r\n                    destinationLon = viewModel.latLonDestinationAddress?.longitude\r\n                )\r\n                viewModel.calculateDistance(addressData)\r\n               //  drawMap()\r\n              //  Findroutes(viewModel.latLonOriginAddress,viewModel.latLonDestinationAddress);\r\n            }\r\n\r\n             */\r\n        }\r\n        binding.edtOriginSearch.setOnEdittextDone = { origin ->\r\n            if (origin.isEmpty()) {\r\n                binding.edtOriginSearch.requestFocus()\r\n                binding.edtOriginSearch.setVisibleMessageError(getString(R.string.invalid_field))\r\n            } else {\r\n                binding.edtOriginSearch.setGoneMessageError()\r\n                setUpOriginLatLon()\r\n            }\r\n        }\r\n        binding.edtOriginSearch.onFocusChange = {\r\n            if (!it) {\r\n                val origin = binding.edtOriginSearch.getValueText()\r\n                if (origin.isEmpty()) {\r\n                    binding.edtOriginSearch.requestFocus()\r\n                    binding.edtOriginSearch.setVisibleMessageError(getString(R.string.invalid_field))\r\n                } else {\r\n                    binding.edtOriginSearch.setGoneMessageError()\r\n                    setUpOriginLatLon()\r\n                }\r\n            }\r\n        }\r\n        binding.edtDestinationSearch.setOnEdittextDone = { destination ->\r\n            if (destination.isNotEmpty()) {\r\n                setUpDestinationLatLon()\r\n            } else {\r\n                binding.edtDestinationSearch.requestFocus()\r\n                binding.edtDestinationSearch.setVisibleMessageError(getString(R.string.invalid_field))\r\n            }\r\n        }\r\n        binding.edtDestinationSearch.onFocusChange = {\r\n            if (!it) {\r\n                val destination = binding.edtDestinationSearch.getValueText()\r\n                if (destination.isNotEmpty()) {\r\n                    binding.edtDestinationSearch.setGoneMessageError()\r\n                    setUpDestinationLatLon()\r\n                } else {\r\n                    binding.edtDestinationSearch.requestFocus()\r\n                    binding.edtDestinationSearch.setVisibleMessageError(getString(R.string.invalid_field))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun setUpOriginLatLon() {\r\n        val locationOrigin = binding.edtOriginSearch.getValueText()\r\n        var addressList: List<Address>? = null;\r\n        if (locationOrigin.isNotEmpty()) {\r\n            val geocoder = Geocoder(this@GoogleMapActivity);\r\n            try {\r\n                addressList = geocoder.getFromLocationName(locationOrigin, 1);\r\n            } catch (e: IOException) {\r\n                e.printStackTrace();\r\n            }\r\n            val address = addressList?.get(0);\r\n            val latLng = address?.let { LatLng(it.latitude, it.longitude) };\r\n            viewModel.latLonOriginAddress = latLng\r\n            latLng?.let { MarkerOptions().position(it).title(locationOrigin) }\r\n                ?.let { mMap?.addMarker(it) };\r\n\r\n            latLng?.let { CameraUpdateFactory.newLatLngZoom(it, 10F) }\r\n                ?.let { mMap?.animateCamera(it) };\r\n        }\r\n    }\r\n\r\n    private fun setUpDestinationLatLon() {\r\n        val locationDestination = binding.edtDestinationSearch.getValueText()\r\n        var addressList: List<Address>? = null;\r\n        if (locationDestination.isNotEmpty()) {\r\n            val geocoder = Geocoder(this@GoogleMapActivity);\r\n            try {\r\n                addressList = geocoder.getFromLocationName(locationDestination, 1);\r\n            } catch (e: IOException) {\r\n                e.printStackTrace();\r\n            }\r\n            val address = addressList?.get(0);\r\n            if(address == null){\r\n                confirm.setNotice(getString(R.string.str_choose_address_again))\r\n            }\r\n           else{\r\n                val latLng = address.let { LatLng(it.latitude, it.longitude) };\r\n                latLng.let { MarkerOptions().position(it).title(locationDestination) }\r\n                    .let { mMap?.addMarker(it) };\r\n\r\n                latLng.let { CameraUpdateFactory.newLatLngZoom(it, 10F) }\r\n                    .let { mMap?.animateCamera(it) };\r\n                viewModel.latLonDestinationAddress = latLng\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun checkValidate(): Boolean {\r\n        if (binding.edtOriginSearch.getValueText().isEmpty()) {\r\n            binding.edtOriginSearch.requestFocus()\r\n            binding.edtOriginSearch.setVisibleMessageError(getString(R.string.invalid_field))\r\n            return false\r\n        } else if (binding.edtDestinationSearch.getValueText().isEmpty()) {\r\n            binding.edtDestinationSearch.requestFocus()\r\n            binding.edtDestinationSearch.setVisibleMessageError(getString(R.string.invalid_field))\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    override fun observeData() {\r\n        viewModel.calculateDistanceLiveData.observe(this) {\r\n            if(it != null){\r\n                viewModel.distance = it\r\n                val addressData = AddressData(\r\n                    originAddress = binding.edtOriginSearch.getValueText(),\r\n                    originAddressLat = viewModel.latLonOriginAddress?.latitude,\r\n                    originAddressLon = viewModel.latLonOriginAddress?.longitude,\r\n                    destinationAddress = binding.edtDestinationSearch.getValueText(),\r\n                    destinationLat = viewModel.latLonDestinationAddress?.latitude,\r\n                    destinationLon = viewModel.latLonDestinationAddress?.longitude\r\n                )\r\n                val orderAddress = OrderAddress(addressData, it.toDouble())\r\n                val i = Intent()\r\n                i.putExtra(AddAddressTransactionActivity.NEW_ADDRESS_ORDER, Utils.g().getJsonFromObject(orderAddress))\r\n                setResult(RESULT_OK, i)\r\n                finish()\r\n            }\r\n        }\r\n    }\r\n\r\n    @SuppressLint(\"PotentialBehaviorOverride\")\r\n    override fun onMapReady(p0: GoogleMap) {\r\n        mMap = p0\r\n        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this)\r\n        mMap?.uiSettings?.isZoomControlsEnabled = true\r\n        mMap?.setOnMarkerClickListener(this)\r\n        setUpMap()\r\n    }\r\n\r\n    private fun Findroutes(Start: LatLng?, End: LatLng?) {\r\n        if (Start == null || End == null) {\r\n            Toast.makeText(this, \"Unable to get location\", Toast.LENGTH_LONG).show()\r\n        } else {\r\n            val routing = Routing.Builder()\r\n                .travelMode(AbstractRouting.TravelMode.DRIVING)\r\n                .withListener(this)\r\n                .alternativeRoutes(true)\r\n                .waypoints(Start, End)\r\n                .key(getString(R.string.API_KEY)) //also define your api key here.\r\n                .build()\r\n            routing.execute()\r\n        }\r\n    }\r\n\r\n    override fun onRoutingFailure(e: RouteException) {\r\n        val parentLayout: View = findViewById(android.R.id.content)\r\n        val snackbar: Snackbar = Snackbar.make(parentLayout, e.toString(), Snackbar.LENGTH_LONG)\r\n        snackbar.show()\r\n//        Findroutes(start,end);\r\n    }\r\n\r\n    override fun onRoutingStart() {\r\n        Toast.makeText(this, \"Finding Route...\", Toast.LENGTH_LONG).show()\r\n    }\r\n\r\n    //If Route finding success..\r\n    override fun onRoutingSuccess(route: ArrayList<Route>, shortestRouteIndex: Int) {\r\n        val center = CameraUpdateFactory.newLatLng(start!!)\r\n        val zoom = CameraUpdateFactory.zoomTo(16f)\r\n        polylines?.clear()\r\n        val polyOptions = PolylineOptions()\r\n        var polylineStartLatLng: LatLng? = null\r\n        var polylineEndLatLng: LatLng? = null\r\n        polylines = ArrayList()\r\n        //add route(s) to the map using polyline\r\n        for (i in 0 until route.size) {\r\n            if (i == shortestRouteIndex) {\r\n                polyOptions.color(resources.getColor(R.color.blue_dark))\r\n                polyOptions.width(7f)\r\n                polyOptions.addAll(route[shortestRouteIndex].getPoints())\r\n                val polyline = mMap!!.addPolyline(polyOptions)\r\n                polylineStartLatLng = polyline.points[0]\r\n                val k: Int = polyline.points.size\r\n                polylineEndLatLng = polyline.points[k - 1]\r\n                polylines!!.add(polyline)\r\n            } else {\r\n            }\r\n        }\r\n\r\n        //Add Marker on route starting position\r\n        val startMarker = MarkerOptions()\r\n        startMarker.position(polylineStartLatLng!!)\r\n        startMarker.title(binding.edtOriginSearch.getValueText())\r\n        mMap!!.addMarker(startMarker)\r\n\r\n        //Add Marker on route ending position\r\n        val endMarker = MarkerOptions()\r\n        endMarker.position(polylineEndLatLng!!)\r\n        endMarker.title(binding.edtDestinationSearch.getValueText())\r\n        mMap!!.addMarker(endMarker)\r\n    }\r\n\r\n    override fun onRoutingCancelled() {\r\n        Findroutes(start, end)\r\n    }\r\n\r\n    override fun onConnectionFailed(p0: ConnectionResult) {\r\n        Findroutes(start, end)\r\n    }\r\n\r\n    private fun bitmapFromVector(context: Context, vectorResId: Int): BitmapDescriptor {\r\n        val vectorDrawable = ContextCompat.getDrawable(context, vectorResId)\r\n        vectorDrawable!!.setBounds(\r\n            0,\r\n            0,\r\n            vectorDrawable.intrinsicWidth,\r\n            vectorDrawable.intrinsicHeight\r\n        )\r\n        val bitmap = Bitmap.createBitmap(\r\n            vectorDrawable.intrinsicWidth,\r\n            vectorDrawable.intrinsicHeight,\r\n            Bitmap.Config.ARGB_8888\r\n        )\r\n        val canvas = Canvas(bitmap)\r\n        vectorDrawable.draw(canvas)\r\n        return BitmapDescriptorFactory.fromBitmap(bitmap)\r\n    }\r\n\r\n    private fun drawMap() {\r\n        viewModel.latLonOriginAddress?.let {\r\n            MarkerOptions().position(it).title(binding.edtOriginSearch.getValueText())\r\n        }\r\n            ?.let { mMap!!.addMarker(it) }\r\n        viewModel.latLonDestinationAddress?.let {\r\n            MarkerOptions().position(it).title(binding.edtDestinationSearch.getValueText())\r\n        }\r\n            ?.let { mMap!!.addMarker(it) }\r\n\r\n        val path: MutableList<LatLng> = ArrayList()\r\n\r\n        val context = GeoApiContext.Builder()\r\n            .apiKey(getString(R.string.API_KEY))\r\n            .build()\r\n        val req = DirectionsApi.getDirections(\r\n            context,\r\n            \"${viewModel.latLonOriginAddress?.latitude ?: \"\"},${viewModel.latLonOriginAddress?.longitude ?: \"\"}\",\r\n            \"${viewModel.latLonDestinationAddress?.latitude ?: \"\"},${viewModel.latLonDestinationAddress?.longitude ?: \"\"}\"\r\n        )\r\n        try {\r\n            runBlocking {\r\n                async {\r\n                    val res =   req.await()\r\n\r\n                if (res.routes != null && res.routes.isNotEmpty()) {\r\n                    val route = res.routes[0]\r\n                    if (route.legs != null) {\r\n                        for (i in route.legs.indices) {\r\n                            val leg = route.legs[i]\r\n                            if (leg.steps != null) {\r\n                                for (j in leg.steps.indices) {\r\n                                    val step = leg.steps[j]\r\n                                    if (step.steps != null && step.steps.size > 0) {\r\n                                    for (k in step.steps.indices) {\r\n                                        val step1 = step.steps[k]\r\n                                        val points1 = step1.polyline\r\n                                        if (points1 != null) {\r\n                                            //Decode polyline and add points to list of route coordinates\r\n                                            val coords1 = points1.decodePath()\r\n                                            for (coord1 in coords1) {\r\n                                                path.add(LatLng(coord1.lat, coord1.lng))\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    val points = step.polyline\r\n                                    if (points != null) {\r\n                                        val coords = points.decodePath()\r\n                                        for (coord in coords) {\r\n                                            path.add(LatLng(coord.lat, coord.lng))\r\n                                        }\r\n                                    }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (path.size > 0) {\r\n                    val opts = PolylineOptions().addAll(path).color(Color.BLUE).width(5f)\r\n                    mMap!!.addPolyline(opts)\r\n                }\r\n\r\n                mMap!!.uiSettings.isZoomControlsEnabled = true\r\n            }\r\n            }\r\n        } catch (ex: Exception) {\r\n            ex.localizedMessage?.let { Log.e(AppConstant.TAG, it) }\r\n        }\r\n\r\n    }\r\n\r\n/*\r\n    override fun onDirectionFinderSuccess(routes: List<Route>) {\r\n        progressDialog?.dismiss();\r\n\r\n        for (route in routes) {\r\n            route.startLocation?.let { CameraUpdateFactory.newLatLngZoom(it, 16F) }\r\n                ?.let { mMap?.moveCamera(it) };\r\n            Log.d(TAG, \"onDirectionFinderSuccess: duration = ${route.duration?.text}\")\r\n            Log.d(TAG, \"onDirectionFinderSuccess: distance = ${route.distance?.text}\")\r\n\r\n            route.startLocation?.let {\r\n                MarkerOptions()\r\n                    .icon(BitmapDescriptorFactory.fromResource(R.drawable.ic_location))\r\n                    .title(route.startAddress)\r\n                    .position(it)\r\n            }?.let {\r\n                mMap?.addMarker(\r\n                    it\r\n                )?.let { originMarkers.add(it) }\r\n            };\r\n            route.endLocation?.let {\r\n                MarkerOptions()\r\n                    .icon(BitmapDescriptorFactory.fromResource(R.drawable.ic_location))\r\n                    .title(route.endAddress)\r\n                    .position(it)\r\n            }?.let { mMap?.addMarker(it)?.let { destinationMarkers.add(it) } };\r\n\r\n            val polylineOptions = PolylineOptions().\r\n            geodesic(true).\r\n            color(Color.BLUE).\r\n            width(10F);\r\n\r\n            for (i in route.points?.indices!!)\r\n            polylineOptions.add(route.points!!.get(i));\r\n\r\n            mMap?.addPolyline(polylineOptions)?.let { polylinePaths.add(it) };\r\n        }\r\n\r\n\r\n    }\r\n\r\n */\r\n\r\n    private fun setUpMap() {\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)\r\n            != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\r\n                this, Manifest.permission.ACCESS_COARSE_LOCATION\r\n            )\r\n            != PackageManager.PERMISSION_GRANTED\r\n        ) {\r\n            ActivityCompat.requestPermissions(\r\n                this, arrayOf(android.Manifest.permission.ACCESS_FINE_LOCATION),\r\n                LOCATION_REQUEST_CODE\r\n            )\r\n            return\r\n        }\r\n        mMap?.isMyLocationEnabled = true\r\n        fusedLocationClient.lastLocation.addOnSuccessListener(this) { location ->\r\n            if (location != null) {\r\n                lastLocation = location\r\n                val currentLatLong = LatLng(location.latitude, location.longitude)\r\n              //  placeMarkerOnMap(currentLatLong)\r\n               // mMap?.animateCamera(CameraUpdateFactory.newLatLngZoom(currentLatLong, 12f))\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private fun placeMarkerOnMap(currentLatLong: LatLng) {\r\n//        val markerOptions = MarkerOptions().position(currentLatLong)\r\n//        markerOptions.title(\"$currentLatLong\")\r\n//        mMap?.addMarker(markerOptions)\r\n    }\r\n\r\n    override fun onMarkerClick(p0: Marker) = false\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/bettinalogistics/ui/activity/gg_map/GoogleMapActivity.kt b/app/src/main/java/com/example/bettinalogistics/ui/activity/gg_map/GoogleMapActivity.kt
---- a/app/src/main/java/com/example/bettinalogistics/ui/activity/gg_map/GoogleMapActivity.kt	(revision 543c71394d916d6931312efbffc17cf4f990eb1f)
-+++ b/app/src/main/java/com/example/bettinalogistics/ui/activity/gg_map/GoogleMapActivity.kt	(date 1668770770568)
-@@ -337,16 +337,10 @@
-         val context = GeoApiContext.Builder()
-             .apiKey(getString(R.string.API_KEY))
-             .build()
--        val req = DirectionsApi.getDirections(
--            context,
--            "${viewModel.latLonOriginAddress?.latitude ?: ""},${viewModel.latLonOriginAddress?.longitude ?: ""}",
--            "${viewModel.latLonDestinationAddress?.latitude ?: ""},${viewModel.latLonDestinationAddress?.longitude ?: ""}"
--        )
--        try {
--            runBlocking {
--                async {
--                    val res =   req.await()
--
-+        viewModel.requestGgApi(context)
-+        viewModel.requestApiLiveData.observe(this) {
-+            try {
-+                val res =  it.await()
-                 if (res.routes != null && res.routes.isNotEmpty()) {
-                     val route = res.routes[0]
-                     if (route.legs != null) {
-@@ -356,25 +350,25 @@
-                                 for (j in leg.steps.indices) {
-                                     val step = leg.steps[j]
-                                     if (step.steps != null && step.steps.size > 0) {
--                                    for (k in step.steps.indices) {
--                                        val step1 = step.steps[k]
--                                        val points1 = step1.polyline
--                                        if (points1 != null) {
--                                            //Decode polyline and add points to list of route coordinates
--                                            val coords1 = points1.decodePath()
--                                            for (coord1 in coords1) {
--                                                path.add(LatLng(coord1.lat, coord1.lng))
--                                            }
--                                        }
--                                    }
--                                } else {
--                                    val points = step.polyline
--                                    if (points != null) {
--                                        val coords = points.decodePath()
--                                        for (coord in coords) {
--                                            path.add(LatLng(coord.lat, coord.lng))
--                                        }
--                                    }
-+                                        for (k in step.steps.indices) {
-+                                            val step1 = step.steps[k]
-+                                            val points1 = step1.polyline
-+                                            if (points1 != null) {
-+                                                //Decode polyline and add points to list of route coordinates
-+                                                val coords1 = points1.decodePath()
-+                                                for (coord1 in coords1) {
-+                                                    path.add(LatLng(coord1.lat, coord1.lng))
-+                                                }
-+                                            }
-+                                        }
-+                                    } else {
-+                                        val points = step.polyline
-+                                        if (points != null) {
-+                                            val coords = points.decodePath()
-+                                            for (coord in coords) {
-+                                                path.add(LatLng(coord.lat, coord.lng))
-+                                            }
-+                                        }
-                                     }
-                                 }
-                             }
-@@ -387,10 +381,9 @@
-                 }
- 
-                 mMap!!.uiSettings.isZoomControlsEnabled = true
--            }
--            }
--        } catch (ex: Exception) {
--            ex.localizedMessage?.let { Log.e(AppConstant.TAG, it) }
-+            } catch (ex: Exception) {
-+                ex.localizedMessage?.let { Log.e(AppConstant.TAG, it) }
-+            }
-         }
- 
-     }
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">Bettina Logistics</string>\r\n    <string name=\"title_activity_maps\">MapsActivity</string>\r\n    <string name=\"title_activity_maps2\">MapsActivity2</string>\r\n    <string name=\"title_activity_login\">LoginActivity</string>\r\n    <string name=\"prompt_email\">Email</string>\r\n    <string name=\"prompt_password\">Mật khẩu</string>\r\n    <string name=\"action_sign_in\">Đăng nhập hoặc đăng ký</string>\r\n    <string name=\"action_sign_in_short\">Đăng nhập</string>\r\n    <string name=\"welcome\">\"Welcome !\"</string>\r\n    <string name=\"login_failed\">Đăng nhập thất bại </string>\r\n    <string name=\"bettina_name\">Bettina</string>\r\n    <string name=\"login\">Đăng nhập</string>\r\n    <string name=\"email\">Email</string>\r\n    <string name=\"password\">Mật khẩu</string>\r\n    <string name=\"forgot_password\">Quên mật khẩu?</string>\r\n    <string name=\"forgot_password_title_dialog\">Quên mật khẩu</string>\r\n    <string name=\"or_login_with\">hoặc đăng nhập với...</string>\r\n    <string name=\"facebook\">Facebook</string>\r\n    <string name=\"google\">Google</string>\r\n    <string name=\"new_user\">Bạn là người dùng mới?</string>\r\n    <string name=\"register\">Đăng ký</string>\r\n    <string name=\"title_signup\">Điền đầy đủ thông tin để đăng ký</string>\r\n    <string name=\"full_name\">Họ tên</string>\r\n    <string name=\"phone\">Số điện thoại</string>\r\n    <string name=\"address\">Địa chỉ</string>\r\n    <string name=\"sign_up\">Đăng nhập</string>\r\n    <string name=\"date_of_birth\">Ngày sinh</string>\r\n    <string name=\"invalid_field\">Mục này là bắt buộc</string>\r\n    <string name=\"invalid_pass\">Mật khẩu cần it nhất 8 kí tự và không chứa dấu cách</string>\r\n    <string name=\"date_picker\">DatePicker</string>\r\n    <string name=\"submit\">Đồng ý</string>\r\n    <string name=\"EURROR_EMAIL\">Xin vui lòng nhập email để tiếp tục</string>\r\n    <string name=\"pass_reset_sent_email\">Mật khẩu được reset lại gửi đã gửi qua email của bạn.</string>\r\n    <string name=\"close\">Đóng</string>\r\n    <string name=\"sign_in\">Đăng ký</string>\r\n    <string name=\"LOGIN_SUCCESS\">Đăng nhập thành công</string>\r\n    <string name=\"VERIFY_EMAIL\">Xin hãy xác thực email</string>\r\n    <string name=\"ERRO_LOGIN\">Tài khoản sai hoặc không tồn tại. Quý khách kiểm tra lại tài khoản. Nếu chưa có tài khoản vui lòng đăng ký tài khoản.</string>\r\n    <string name=\"TITLE_DATE_PICKER\">Chọn ngày sinh</string>\r\n    <string name=\"str_home\">Trang chủ</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"transport_service\">Các dịch vụ vận chuyển</string>\r\n    <string name=\"transport_type\">Các loại vận chuyển</string>\r\n    <string name=\"str_noti\">Thông báo</string>\r\n    <string name=\"str_discount\">Khuyến mãi</string>\r\n    <string name=\"str_search\">Tìm kiếm</string>\r\n    <string name=\"str_order\">Đơn hàng</string>\r\n    <string name=\"str_balance_fluctuations\">Biến động số dư</string>\r\n    <string name=\"str_pending_approval\">Đang chờ duyệt</string>\r\n    <string name=\"str_Delivering\">Đang giao</string>\r\n    <string name=\"str_road_transport\">Đường bộ</string>\r\n    <string name=\"str_sea_transport\">Đường biển</string>\r\n    <string name=\"str_air_transport\">Hàng không</string>\r\n    <string name=\"str_lcl\">Hàng lẻ</string>\r\n    <string name=\"str_fcl_transport\">Hàng nguyên công</string>\r\n    <string name=\"str_container\">Xe container/ Xe tải</string>\r\n    <string name=\"str_plane\">Máy bay</string>\r\n    <string name=\"str_truck\">Xe tải</string>\r\n    <string name=\"str_ship\">Tàu</string>\r\n    <string name=\"str_slider_seaway\">\\t\\tDỊCH VỤ VẬN CHUYỂN ĐƯỜNG BIỂN<i>\\nChất lượng tốt - giá rẻ cạnh tranh</i></string>\r\n    <string name=\"str_slider_flightway\">\\t\\tDỊCH VỤ VẬN CHUYỂN ĐƯỜNG HÀNG KHÔNG<i>\\nChất lượng tốt - giá rẻ cạnh tranh</i></string>\r\n    <string name=\"str_slider_roadway\">\\t\\tDỊCH VỤ VẬN CHUYỂN ĐƯỜNG BỘ<i>\\nChất lượng tốt - giá rẻ cạnh tranh</i></string>\r\n    <string name=\"str_pending_order\">Chờ duyệt</string>\r\n    <string name=\"str_transporting_order\">Đang vận chuyển</string>\r\n    <string name=\"str_waiting_transporting_order\">Chờ vận chuyển</string>\r\n    <string name=\"str_finish_order\">Đã giao</string>\r\n    <string name=\"str_list_order\">Danh sách đơn hàng</string>\r\n    <string name=\"str_add_new_product\">Thêm mặt hàng</string>\r\n    <string name=\"str_ordering\">Đặt hàng</string>\r\n    <string name=\"str_product_image\">Hình ảnh</string>\r\n    <string name=\"str_product_name\">Tên sản phẩm</string>\r\n    <string name=\"str_product_des\">Mô tả</string>\r\n    <string name=\"str_product_quantity\">Số lượng</string>\r\n    <string name=\"str_product_volume\">Số khối</string>\r\n    <string name=\"str_product_volume_hint\">Thể tích</string>\r\n    <string name=\"str_product_mass\">Khối lượng \\n(1 thùng-Kg)</string>\r\n    <string name=\"str_product_mass_hint\">Khối lượng</string>\r\n    <string name=\"str_product_Number_of_bins\">Số thùng</string>\r\n    <string name=\"str_create_product\">Thêm vào đơn hàng</string>\r\n    <string name=\"str_order_lcl\">Hàng lẻ</string>\r\n    <string name=\"str_order_fcl\">Hàng nguyên cont</string>\r\n    <string name=\"str_error_product_image_null\">Ảnh không được để trống</string>\r\n    <string name=\"str_error_product_data_blank_null\">Yêu cầu nhập đủ dữ liệu về đơn hàng</string>\r\n    <string name=\"header_order\">Danh sách đơn hàng</string>\r\n    <string name=\"str_add_order_success\">Đặt hàng thành công</string>\r\n    <string name=\"str_add_order_fail\">Đặt hàng không thành công. Vui lòng thử lại</string>\r\n    <string name=\"str_get_all_order_fail\">Mời quý khách thêm đơn hàng</string>\r\n    <string name=\"str_sign_up_success\">Đăng nhập thành công</string>\r\n    <string name=\"str_please_signup\">Vui lòng đăng nhập để sử dụng dữ liệu</string>\r\n    <string name=\"str_hello\">Xin chào %s</string>\r\n    <string name=\"str_agree\">Đồng ý</string>\r\n    <string name=\"header_product\">Danh sách sản phẩm</string>\r\n    <string name=\"str_confirm_out\">Bạn có muốn tiếp tục điền thông tin sản phẩm?</string>\r\n    <string name=\"str_confirm_order\">Bạn muốn tiếp tục đặt hàng không?</string>\r\n    <string name=\"login_success\">Đăng nhập thành công</string>\r\n    <string name=\"sign_in_failed\">Đăng ký không thành công. Mời quý khách kiểm tra thông tin và thao tác lại</string>\r\n    <string name=\"pass_reset_fail\">Có lỗi trong quá trình xảy ra. Hãy kiểm tra lại email của bạn đã đăng ký chưa và thử lại</string>\r\n    <string name=\"str_sign_in_success\">Đăng ký thành công.</string>\r\n    <string name=\"str_continue\">Tiếp tục</string>\r\n    <string name=\"open_navigation_drawer\">Open Drawer</string>\r\n    <string name=\"close_navigation_drawer\">Open Drawer</string>\r\n    <string name=\"API_KEY\">AIzaSyCbSowrmJ7XdfVlT-nCvHNI-pmmaD0wF_8</string>\r\n    <string name=\"HANDLE_ERROR\">Có lỗi xảy ra trong quá trình xử lý, quý khách thử lại trong giây lát</string>\r\n    <string name=\"str_choose_origin_address\">Chọn địa điểm gửi hàng</string>\r\n    <string name=\"str_choose_destination_address\">Chọn địa điểm giao hàng</string>\r\n    <string name=\"str_type_transaction\">Hình thức vận chuyển</string>\r\n    <string name=\"str_client_choose_transaction\">Khách hàng chọn hình thức vận chuyển</string>\r\n    <string name=\"str_shop_choose_transaction\">Đơn vị vận chuyển tự chọn hình thức vận chuyển</string>\r\n    <string name=\"str_enter_address_detail\">Số nhà/ tên đường chi tiết</string>\r\n    <string name=\"str_method_transaction\">Cách thức vận chuyển</string>\r\n    <string name=\"str_chinh_ngach\">Chính ngạch</string>\r\n    <string name=\"str_tieu_ngach\">Tiểu ngạch</string>\r\n    <string name=\"str_choose_type_transaction\">Chọn loại hình vận chuyển</string>\r\n    <string name=\"str_confirm\">Xác nhận</string>\r\n    <string name=\"str_company_info\">Thông tin công ty</string>\r\n    <string name=\"str_company_name\">Tên công ty</string>\r\n    <string name=\"str_company_code\">Mã số thuế</string>\r\n    <string name=\"str_comany_address\">Địa chỉ công ty</string>\r\n    <string name=\"str_company_email\">Email công ty</string>\r\n    <string name=\"str_origin_address_enter\">Nhập địa điểm gửi hàng</string>\r\n    <string name=\"str_destination_address_enter\">Nhập địa điểm giao hàng</string>\r\n    <string name=\"str_find_path\">Tìm đường</string>\r\n    <string name=\"str_origin_address\">Địa điểm gửi hàng</string>\r\n    <string name=\"str_destination_address\">Địa điểm giao hàng</string>\r\n    <string name=\"str_choose_address\">Chọn địa điểm giao/ nhận</string>\r\n    <string name=\"str_address_order\">Địa điểm giao/ nhận hàng</string>\r\n    <string name=\"str_enter_company_name\">Tên công ty</string>\r\n    <string name=\"str_fill_company_info\">Thông tin công ty</string>\r\n    <string name=\"str_enter_company_address\">Địa chỉ công ty</string>\r\n    <string name=\"str_enter_company_tex_code\">Mã số thuế</string>\r\n    <string name=\"str_enter_company_business_type\">Lĩnh vực kinh doanh</string>\r\n    <string name=\"str_add_company_success\">Thêm mới thông tin thành công</string>\r\n    <string name=\"str_add_company_failed\">Thêm mới thông tin thất bại, mời quý khách thao tác lại</string>\r\n    <string name=\"tr_choose_type_transportation\">Vui lòng chọn 1 phương thức vận chuyển</string>\r\n    <string name=\"tr_choose_method_transportation\">Vui lòng chọn 1 hình thức vận chuyển</string>\r\n    <string name=\"str_phone_contact\">Số điện thoại liên hệ</string>\r\n    <string name=\"str_list_product\">Danh sách hàng hóa</string>\r\n    <string name=\"str_user_confirm\">Thông tin công ty</string>\r\n    <string name=\"str_order_confirm\">Đặt hàng</string>\r\n    <string name=\"str_user_name\">Người đại diện</string>\r\n    <string name=\"str_choose_edit_infor\">Chỉnh sửa thông tin</string>\r\n    <string name=\"str_edit_order\">Chỉnh sửa thông tin người dùng</string>\r\n    <string name=\"str_edit_info\">Chỉnh sửa thông tin đơn hàng</string>\r\n    <string name=\"str_choose_edit_content\">Người dùng chọn 1 trong 2 để chỉnh sửa</string>\r\n    <string name=\"str_payment_info\">Thông tin thanh toán</string>\r\n    <string name=\"str_payment_amount\">Số tiền đơn hàng</string>\r\n    <string name=\"str_payment_voucher\">Khuyến mãi</string>\r\n    <string name=\"str_payment_time\">Thời gian thanh toán</string>\r\n    <string name=\"str_payment_time_success\">Thanh toán sau khi nhận hàng</string>\r\n    <string name=\"str_payment_debt\">Công nợ</string>\r\n    <string name=\"str_payment_debt_time\">Tối đa 10 ngày sau khi nhận hàng</string>\r\n    <string name=\"str_payment_sum\">Tổng tiền cần thanh toán</string>\r\n    <string name=\"str_payment_inland_trucking_amount\">Tiền vận chuyển nội địa\\n(2 chiều)</string>\r\n    <string name=\"str_payment_service\">Tiền dịch vụ \\n(Bao gồm: các cước phí,\\nthủ tục thông quan,..)</string>\r\n    <string name=\"str_payment_internal_trucking\">Phí vận chuyển quốc tế</string>\r\n    <string name=\"str_choose_origin_address_again\">Địa điểm gửi hàng không chính xác, vui lòng nhập lại địa điểm</string>\r\n    <string name=\"str_choose_destination_address_again\">Địa điểm nhận hàng không chính xác, vui lòng nhập lại địa điểm</string>\r\n    <string name=\"str_product_type\">Chọn loại hàng hóa</string>\r\n    <string name=\"str_product_image_choose\">Chọn ảnh hàng hóa</string>\r\n    <string name=\"str_cont_type_choose\">Chọn loại cont</string>\r\n    <string name=\"str_new_company\">Bạn là công ty mới? Vui lòng thêm thông tin về công ty.</string>\r\n    <string name=\"str_amount_before_discount_title\">Tổng tiền</string>\r\n    <string name=\"str_product_empty\">Quý khách chưa có sản phẩm nào, vui lòng thêm sản phẩm</string>\r\n    <string name=\"str_del_product\">Xóa sản phẩm</string>\r\n    <string name=\"str_edt_product\">Chỉnh sửa sản phẩm</string>\r\n    <string name=\"str_update\">Cập nhật</string>\r\n    <string name=\"str_add_new_product_tocart_fail\">Thêm sản phẩm vào giỏ không thành công, vui lòng thao tác lại</string>\r\n    <string name=\"str_korea\">Hàn Quốc</string>\r\n    <string name=\"str_china\">Trung Quốc</string>\r\n    <string name=\"str_infomation_transaction\">Thông tin vận chuyển</string>\r\n    <string name=\"str_infor_order\">Thông tin đơn hàng</string>\r\n    <string name=\"str_user_info\">Thông tin nhận hàng</string>\r\n    <string name=\"str_product_info\">Thông tin sản phẩm</string>\r\n    <string name=\"str_confirm_infor\">Xác nhận thông tin đặt hàng</string>\r\n    <string name=\"str_delete_success\">Xóa sản phẩm thành công</string>\r\n    <string name=\"str_delete_fail\">Xóa sản phẩm không thành công, mời bạn thử lại</string>\r\n    <string name=\"str_update_product_faid\">Cập nhật sản phẩm không thành công, vui lòng thao tác lại</string>\r\n    <string name=\"str_tracking\">Theo dõi đơn hàng</string>\r\n    <string name=\"str_search_tracking\">Nhập tên hoặc mã đơn hàng để tìm kiếm</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	
+++ b/app/src/main/res/values/strings.xml	
@@ -179,4 +179,7 @@
     <string name="str_update_product_faid">Cập nhật sản phẩm không thành công, vui lòng thao tác lại</string>
     <string name="str_tracking">Theo dõi đơn hàng</string>
     <string name="str_search_tracking">Nhập tên hoặc mã đơn hàng để tìm kiếm</string>
+    <string name="today_date">Hôm nay, %s</string>
+    <string name="yesterday_date">Hôm qua, %s</string>
+    <string name="number_of_transaction">%s giao dịch</string>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/bettinalogistics/data/FollowTrackingRepo.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bettinalogistics.data\r\n\r\ninterface FollowTrackingRepo {\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bettinalogistics/data/FollowTrackingRepo.kt b/app/src/main/java/com/example/bettinalogistics/data/FollowTrackingRepo.kt
--- a/app/src/main/java/com/example/bettinalogistics/data/FollowTrackingRepo.kt	
+++ b/app/src/main/java/com/example/bettinalogistics/data/FollowTrackingRepo.kt	
@@ -1,5 +1,35 @@
 package com.example.bettinalogistics.data
 
+import android.util.Log
+import com.example.bettinalogistics.model.Order
+import com.example.bettinalogistics.model.Product
+import com.example.bettinalogistics.utils.AppConstant
+import com.example.bettinalogistics.utils.DataConstant
+import com.google.firebase.firestore.FirebaseFirestore
+import com.google.firebase.firestore.QuerySnapshot
+import com.google.firebase.firestore.SetOptions
+
 interface FollowTrackingRepo {
+    suspend fun getAllOrderByStatus(status: String, onComplete: ((List<Order>?) -> Unit)?)
+}
 
+class FollowTrackingRepoImpl : FollowTrackingRepo {
+    override suspend fun getAllOrderByStatus(status: String, onComplete: ((List<Order>?) -> Unit)?) {
+        val listOrder = ArrayList<Order>()
+        FirebaseFirestore.getInstance().collection(AppConstant.ORDER_COLLECTION)
+            .whereEqualTo(DataConstant.ORDER_STATUS, status)
+            .get()
+            .addOnSuccessListener { queryDocumentSnapshots: QuerySnapshot ->
+                for (query in queryDocumentSnapshots) {
+                    val order = query.toObject(Order::class.java)
+                    listOrder.add(order)
+                }
+               onComplete?.invoke(listOrder)
+            }.addOnFailureListener {
+                Log.d(AppConstant.TAG, "getAllOrderByStatus: $it")
+                onComplete?.invoke(null)
+            }.addOnCanceledListener {
+                onComplete?.invoke(null)
+            }
+    }
 }
\ No newline at end of file
Index: app/src/main/res/drawable/ic_order_process.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_order_process.xml b/app/src/main/res/drawable/ic_order_process.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/ic_order_process.xml	
@@ -0,0 +1,30 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="42dp"
+    android:height="42dp"
+    android:viewportWidth="42"
+    android:viewportHeight="42">
+  <path
+      android:pathData="M12,2L28,2A12,12 0,0 1,40 14L40,30A12,12 0,0 1,28 42L12,42A12,12 0,0 1,0 30L0,14A12,12 0,0 1,12 2z"
+      android:fillColor="#F8F8F9"/>
+  <path
+      android:pathData="M36,6m-6,0a6,6 0,1 1,12 0a6,6 0,1 1,-12 0"
+      android:fillColor="#FFBE21"/>
+  <path
+      android:pathData="M38.429,7H35.57A0.571,0.571 0,0 1,35 6.429V3.57a0.571,0.571 0,1 1,1.143 0v2.286h2.286a0.571,0.571 0,0 1,0 1.143z"
+      android:strokeWidth=".3"
+      android:fillColor="#fff"
+      android:strokeColor="#fff"/>
+  <path
+      android:pathData="M10.77,20c-0.43,0 -0.77,-0.34 -0.77,-0.77v-2.31A4.93,4.93 0,0 1,14.92 12h2.31c0.43,0 0.77,0.34 0.77,0.77s-0.34,0.77 -0.77,0.77h-2.31c-1.87,0 -3.38,1.52 -3.38,3.38v2.31c0,0.43 -0.35,0.77 -0.77,0.77zM29.23,20a0.77,0.77 0,0 1,-0.77 -0.77v-2.31c0,-1.87 -1.52,-3.38 -3.38,-3.38h-2.31a0.77,0.77 0,0 1,0 -1.54h2.31A4.93,4.93 0,0 1,30 16.92v2.31c0,0.43 -0.34,0.77 -0.77,0.77z"
+      android:strokeAlpha="0.4"
+      android:fillColor="#101010"
+      android:fillAlpha="0.4"/>
+  <path
+      android:pathData="M25.08,32h-1.39a0.77,0.77 0,0 1,0 -1.54h1.39c1.87,0 3.38,-1.52 3.38,-3.38V25.7a0.77,0.77 0,0 1,1.54 0v1.38A4.93,4.93 0,0 1,25.08 32zM17.23,32h-2.31A4.93,4.93 0,0 1,10 27.08v-2.31c0,-0.43 0.34,-0.77 0.77,-0.77s0.77,0.34 0.77,0.77v2.31c0,1.87 1.52,3.38 3.38,3.38h2.31a0.77,0.77 0,0 1,0 1.54zM26.46,21.23H13.54a0.77,0.77 0,0 0,0 1.54H26.46a0.77,0.77 0,0 0,0 -1.54zM14.9,23.94v0.33c0,1.66 1.34,3 3,3h4.2c1.66,0 3,-1.34 3,-3v-0.33c0,-0.12 -0.09,-0.21 -0.21,-0.21h-9.78c-0.12,0 -0.21,0.09 -0.21,0.21z"
+      android:fillColor="#101010"/>
+  <path
+      android:pathData="M14.9,20.06v-0.33c0,-1.66 1.34,-3 3,-3h4.2c1.66,0 3,1.34 3,3v0.33c0,0.12 -0.09,0.21 -0.21,0.21h-9.78c-0.12,0 -0.21,-0.09 -0.21,-0.21z"
+      android:strokeAlpha="0.4"
+      android:fillColor="#101010"
+      android:fillAlpha="0.4"/>
+</vector>
Index: app/src/main/res/drawable/ic_order_success.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_order_success.xml b/app/src/main/res/drawable/ic_order_success.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/ic_order_success.xml	
@@ -0,0 +1,32 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="42dp"
+    android:height="42dp"
+    android:viewportWidth="42"
+    android:viewportHeight="42">
+  <path
+      android:pathData="M12,2L28,2A12,12 0,0 1,40 14L40,30A12,12 0,0 1,28 42L12,42A12,12 0,0 1,0 30L0,14A12,12 0,0 1,12 2z"
+      android:fillColor="#F8F8F9"/>
+  <path
+      android:pathData="M36,6m-6,0a6,6 0,1 1,12 0a6,6 0,1 1,-12 0"
+      android:fillColor="#004A9C"/>
+  <path
+      android:pathData="m34,6.492 l1.5,1.193L38,5"
+      android:strokeLineJoin="round"
+      android:strokeWidth="1.5"
+      android:fillColor="#00000000"
+      android:strokeColor="#fff"
+      android:strokeLineCap="round"/>
+  <path
+      android:pathData="M10.77,20c-0.43,0 -0.77,-0.34 -0.77,-0.77v-2.31A4.93,4.93 0,0 1,14.92 12h2.31c0.43,0 0.77,0.34 0.77,0.77s-0.34,0.77 -0.77,0.77h-2.31c-1.87,0 -3.38,1.52 -3.38,3.38v2.31c0,0.43 -0.35,0.77 -0.77,0.77zM29.23,20a0.77,0.77 0,0 1,-0.77 -0.77v-2.31c0,-1.87 -1.52,-3.38 -3.38,-3.38h-2.31a0.77,0.77 0,0 1,0 -1.54h2.31A4.93,4.93 0,0 1,30 16.92v2.31c0,0.43 -0.34,0.77 -0.77,0.77z"
+      android:strokeAlpha="0.4"
+      android:fillColor="#101010"
+      android:fillAlpha="0.4"/>
+  <path
+      android:pathData="M25.08,32h-1.39a0.77,0.77 0,0 1,0 -1.54h1.39c1.87,0 3.38,-1.52 3.38,-3.38V25.7a0.77,0.77 0,0 1,1.54 0v1.38A4.93,4.93 0,0 1,25.08 32zM17.23,32h-2.31A4.93,4.93 0,0 1,10 27.08v-2.31c0,-0.43 0.34,-0.77 0.77,-0.77s0.77,0.34 0.77,0.77v2.31c0,1.87 1.52,3.38 3.38,3.38h2.31a0.77,0.77 0,0 1,0 1.54zM26.46,21.23H13.54a0.77,0.77 0,0 0,0 1.54H26.46a0.77,0.77 0,0 0,0 -1.54zM14.9,23.94v0.33c0,1.66 1.34,3 3,3h4.2c1.66,0 3,-1.34 3,-3v-0.33c0,-0.12 -0.09,-0.21 -0.21,-0.21h-9.78c-0.12,0 -0.21,0.09 -0.21,0.21z"
+      android:fillColor="#101010"/>
+  <path
+      android:pathData="M14.9,20.06v-0.33c0,-1.66 1.34,-3 3,-3h4.2c1.66,0 3,1.34 3,3v0.33c0,0.12 -0.09,0.21 -0.21,0.21h-9.78c-0.12,0 -0.21,-0.09 -0.21,-0.21z"
+      android:strokeAlpha="0.4"
+      android:fillColor="#101010"
+      android:fillAlpha="0.4"/>
+</vector>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/item_tracking_following_tab.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/layout_group_textview.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/loading_dialog.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/loading_dialog_vn.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable-v24/bg_horizontal_dotted_line.xml\" value=\"0.1495\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout-w936dp/item_tracking_following.xml\" value=\"0.21\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout-w936dp/item_tracking_tab.xml\" value=\"0.144140625\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_add_address_transaction.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_add_new_order.xml\" value=\"0.1921875\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_confirm_order_transportation.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_google_map.xml\" value=\"0.1921875\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_main.xml\" value=\"0.1921875\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_order.xml\" value=\"0.1921875\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/add_order_item_layout.xml\" value=\"0.1921875\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_choose_type_transportation_bottom.xml\" value=\"0.2930513595166163\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_follow_track.xml\" value=\"0.1921875\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_follow_tracking.xml\" value=\"0.1921875\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/header_layout.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_follow_tracking_tab.xml\" value=\"0.1921875\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_order_confirm_header.xml\" value=\"0.1921875\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_order_confirm_line.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_order_info_confirm.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_user_info_confirm.xml\" value=\"0.15\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/layout_header.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/navigation_drawer_layout.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/menu/product_item.xml\" value=\"0.1\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -3,32 +3,147 @@
   <component name="DesignSurface">
     <option name="filePathToZoomLevelMap">
       <map>
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/item_tracking_following_tab.xml" value="0.25" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/layout_group_textview.xml" value="0.25" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/loading_dialog.xml" value="0.1" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/loading_dialog_vn.xml" value="0.1" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable-v24/bg_horizontal_dotted_line.xml" value="0.1495" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout-w936dp/item_tracking_following.xml" value="0.21" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout-w936dp/item_tracking_tab.xml" value="0.144140625" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/drawable/background_radius_white.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/drawable/background_white_stroke_color_dash_radius_8.xml" value="0.16" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/drawable/bg_alert_dialog_custom.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/drawable/custom_bg_circle_gray_bt_cancel_dialog.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/drawable/custom_bg_secondary_sea_green_button.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/drawable/custom_progress.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/drawable/ic_baseline_search_24.xml" value="0.1615" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/drawable/ic_show_password.xml" value="0.135" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/drawable/shape_white_bg_blue_stroke_radius_8.xml" value="0.16" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/custom_layout_edittext_password.xml" value="0.22" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/custom_layout_edittext_round.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/dialog_notice.xml" value="0.25" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/layout_group_edittext.xml" value="0.25" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/layout_group_textview.xml" value="0.1921875" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/layout_loading.xml" value="0.13796296296296295" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/BaseApp/src/main/res/layout/loading_dialog.xml" value="0.18697916666666667" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable-v24/bg_horizontal_dotted_line.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable-v24/custom_background_edittext.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable-v24/custom_background_edt_email.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable-v24/custom_background_email_signup.xml" value="0.1865" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable-v24/custom_background_linear_email.xml" value="0.106" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable-v24/custom_background_linear_signup.xml" value="0.106" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable-v24/custom_background_signup.xml" value="0.1075" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable-v24/custom_background_title_signup.xml" value="0.1865" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable-v24/ic_location_b.xml" value="0.1455" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/bg_white_corne_8_width_1_5.xml" value="0.144" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/custom_background_button.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/custom_background_button_face.xml" value="0.1075" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/custom_background_button_face_gg.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/custom_background_button_gg.xml" value="0.1125" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/custom_background_circle_image.xml" value="0.106" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/custom_background_img_view.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/custom_background_view.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/custom_bg_circle_gray_bt_cancel.xml" value="0.1075" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/custom_bg_circle_white_image.xml" value="0.1075" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_baseline_account_box_24.xml" value="0.106" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_baseline_contact_phone_24.xml" value="0.106" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_baseline_date_range_24.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_baseline_email_24.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_baseline_home_24.xml" value="0.106" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_baseline_lock_24.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_baseline_remove_red_eye_24.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_bookmark.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_bookmarked.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_direction.xml" value="0.134" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_location.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_map_type.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_my_location.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_rating.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/ic_traffic.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/logo_bg.xml" value="0.1325" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/map_background.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/shape_a2a2a5_stroke_corner_12.xml" value="0.1565" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/shape_a2a2a5_stroke_corner_8.xml" value="0.1505" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/shape_bg_fffff_corner_12.xml" value="0.1565" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/shape_bg_fffff_corner_8.xml" value="0.1505" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/shape_f1f0f3_stroke_corner_12.xml" value="0.1565" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/shape_ffffff_stroke_004a9c_corner_12.xml" value="0.1565" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/shape_ffffff_stroke_f1f0f3_width_4_corner_12.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/shape_merchant_color_004a9c_corner_12.xml" value="0.135" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/shape_merchant_color_004a9c_corner_8.xml" value="0.1565" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/shape_merchant_color_f2f6fa_corner_12.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/drawable/shape_merchant_color_ffffff_corner_top_24.xml" value="0.1" />
         <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_add_address_transaction.xml" value="0.25" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_add_new_order.xml" value="0.1921875" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_confirm_order_transportation.xml" value="0.33" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_google_map.xml" value="0.1921875" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_main.xml" value="0.1921875" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_add_new_order.xml" value="0.25" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_confirm_order_transportation.xml" value="0.25" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_direction.xml" value="0.18" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_google_map.xml" value="0.25" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_login.xml" value="0.22" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_main.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_main_test.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_maps.xml" value="0.1" />
         <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_order.xml" value="0.1921875" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/add_order_item_layout.xml" value="0.1921875" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_choose_type_transportation_bottom.xml" value="0.2930513595166163" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_follow_track.xml" value="0.1921875" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_follow_tracking.xml" value="0.1921875" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/header_layout.xml" value="0.1" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_follow_tracking_tab.xml" value="0.1921875" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_order_confirm_header.xml" value="0.1921875" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_order_confirm_line.xml" value="0.1" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_order_info_confirm.xml" value="0.1" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_user_info_confirm.xml" value="0.15" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_sign_up.xml" value="0.22" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/activity_splash_screen.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/add_new_product_bottom_sheet_dialog.xml" value="0.25" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/add_order_item_layout.xml" value="0.25" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/bg_horizontal_dotted_line.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/confirm_order_transportation_item.xml" value="0.1921875" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/custom_layout_edittext_round.xml" value="0.1921875" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/customer_company_info_layout.xml" value="0.25" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/dialog_forgot_password.xml" value="0.18" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_choose_type_transportation_bottom.xml" value="0.25" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_confirm_bottom_dialog.xml" value="0.22" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_customer_company_info_bottom.xml" value="0.25" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_hom_test.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_home_test.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/fragment_saved_place.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/header_layout.xml" value="0.12" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/info_window_layout.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_order_confirm.xml" value="0.15" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_order_confirm_header.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_order_confirm_line.xml" value="0.15" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_order_info_confirm.xml" value="0.25" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/item_user_info_confirm.xml" value="0.1921875" />
         <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/layout_header.xml" value="0.18802083333333333" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/layout_item_places.xml" value="0.18" />
         <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/navigation_drawer_layout.xml" value="0.1" />
-        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/menu/product_item.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/place_item_layout.xml" value="0.22" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/saved_item_layout.xml" value="0.1921875" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/step_item_layout.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/layout/toolbar_layout.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/menu/map_type_menu.xml" value="0.1921875" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/menu/nav_menu.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml" value="0.1" />
+        <entry key="..\:/Code/Logistics/Code/BettinaLogistics/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml" value="0.1" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable-v24/custom_background_edt_email.xml" value="0.1" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable-v24/custom_background_linear_email.xml" value="0.1" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable-v24/ic_checkbox_checked.xml" value="0.1585" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable-v24/ic_checkbox_uncheck.xml" value="0.1585" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable-v24/shape_merchant_color_f8f8f9_corner_8.xml" value="0.1585" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/background_blue.xml" value="0.169" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/custom_background_img_view.xml" value="0.1" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/ic_baseline_email_24.xml" value="0.1" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/ic_baseline_home_24.xml" value="0.16" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/ic_baseline_lock_24.xml" value="0.1" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/ic_close.xml" value="0.176" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/ic_order_fail.xml" value="0.169" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/ic_order_process.xml" value="0.169" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/ic_order_success.xml" value="0.169" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/selector_f8f8f9_color_004a9c_selected_corner_8.xml" value="0.1585" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/shape_bg_fffff_corner_12.xml" value="0.1" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/drawable/shape_ffffff_stroke_004a9c_corner_12.xml" value="0.1585" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/activity_add_new_order.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/activity_login.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/activity_main.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/activity_order.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/activity_sign_up.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/add_new_product_bottom_sheet_dialog.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/custom_layout_edittext_round.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/customer_company_info_layout.xml" value="0.13697916666666668" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/dialog_service_contact.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/fragment_choose_type_transportation_bottom.xml" value="0.264" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/fragment_confirm_bottom_dialog.xml" value="0.13697916666666668" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/fragment_home.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/home_transport_method_item.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/item_follow_tracking_tab.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/item_order_follow.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/item_service_contact.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/item_transaction_date.xml" value="0.2421875" />
+        <entry key="..\:/YenLbClone/logistics_app/app/src/main/res/layout/layout_header.xml" value="0.2421875" />
       </map>
     </option>
   </component>
Index: app/src/main/res/drawable/ic_order_fail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_order_fail.xml b/app/src/main/res/drawable/ic_order_fail.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/ic_order_fail.xml	
@@ -0,0 +1,29 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="42dp"
+    android:height="42dp"
+    android:viewportWidth="42"
+    android:viewportHeight="42">
+  <path
+      android:pathData="M12,2L28,2A12,12 0,0 1,40 14L40,30A12,12 0,0 1,28 42L12,42A12,12 0,0 1,0 30L0,14A12,12 0,0 1,12 2z"
+      android:fillColor="#F8F8F9"/>
+  <path
+      android:pathData="M36,6m-6,0a6,6 0,1 1,12 0a6,6 0,1 1,-12 0"
+      android:fillColor="#EA5B5B"/>
+  <path
+      android:pathData="M32.75,6c0,-0.42 0.33,-0.75 0.75,-0.75h5a0.75,0.75 0,1 1,0 1.5h-5c-0.42,0 -0.75,-0.34 -0.75,-0.75z"
+      android:fillColor="#F9F9F9"
+      android:fillType="evenOdd"/>
+  <path
+      android:pathData="M10.77,20c-0.43,0 -0.77,-0.34 -0.77,-0.77v-2.31A4.93,4.93 0,0 1,14.92 12h2.31c0.43,0 0.77,0.34 0.77,0.77s-0.34,0.77 -0.77,0.77h-2.31c-1.87,0 -3.38,1.52 -3.38,3.38v2.31c0,0.43 -0.35,0.77 -0.77,0.77zM29.23,20a0.77,0.77 0,0 1,-0.77 -0.77v-2.31c0,-1.87 -1.52,-3.38 -3.38,-3.38h-2.31a0.77,0.77 0,0 1,0 -1.54h2.31A4.93,4.93 0,0 1,30 16.92v2.31c0,0.43 -0.34,0.77 -0.77,0.77z"
+      android:strokeAlpha="0.4"
+      android:fillColor="#101010"
+      android:fillAlpha="0.4"/>
+  <path
+      android:pathData="M25.08,32h-1.39a0.77,0.77 0,0 1,0 -1.54h1.39c1.87,0 3.38,-1.52 3.38,-3.38V25.7a0.77,0.77 0,0 1,1.54 0v1.38A4.93,4.93 0,0 1,25.08 32zM17.23,32h-2.31A4.93,4.93 0,0 1,10 27.08v-2.31c0,-0.43 0.34,-0.77 0.77,-0.77s0.77,0.34 0.77,0.77v2.31c0,1.87 1.52,3.38 3.38,3.38h2.31a0.77,0.77 0,0 1,0 1.54zM26.46,21.23H13.54a0.77,0.77 0,0 0,0 1.54H26.46a0.77,0.77 0,0 0,0 -1.54zM14.9,23.94v0.33c0,1.66 1.34,3 3,3h4.2c1.66,0 3,-1.34 3,-3v-0.33c0,-0.12 -0.09,-0.21 -0.21,-0.21h-9.78c-0.12,0 -0.21,0.09 -0.21,0.21z"
+      android:fillColor="#101010"/>
+  <path
+      android:pathData="M14.9,20.06v-0.33c0,-1.66 1.34,-3 3,-3h4.2c1.66,0 3,1.34 3,3v0.33c0,0.12 -0.09,0.21 -0.21,0.21h-9.78c-0.12,0 -0.21,-0.09 -0.21,-0.21z"
+      android:strokeAlpha="0.4"
+      android:fillColor="#101010"
+      android:fillAlpha="0.4"/>
+</vector>
Index: app/src/main/java/com/example/bettinalogistics/di/modules.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bettinalogistics.di\r\n\r\nimport com.example.baseapp.di.AndroidResourceProvider\r\nimport com.example.baseapp.di.ResourceProvider\r\nimport com.example.baseapp.di.dialogs\r\nimport com.example.bettinalogistics.data.*\r\nimport com.example.bettinalogistics.ui.activity.add_new_order.AddNewProductViewModel\r\nimport com.example.bettinalogistics.ui.activity.addorder.OrderViewModel\r\nimport com.example.bettinalogistics.ui.activity.confirm_order.ConfirmOrderViewModel\r\nimport com.example.bettinalogistics.ui.activity.gg_map.GoogleMapViewmodel\r\nimport com.example.bettinalogistics.ui.activity.login.LoginViewModel\r\nimport com.example.bettinalogistics.ui.activity.main.MainViewModel\r\nimport com.example.bettinalogistics.ui.activity.signup.SignUpViewModel\r\nimport com.example.bettinalogistics.ui.activity.splash.SplashViewModel\r\nimport com.example.bettinalogistics.ui.fragment.followtrask.FollowTrackingViewModel\r\nimport com.example.bettinalogistics.ui.fragment.home.HomeViewModel\r\nimport org.koin.androidx.viewmodel.ext.koin.viewModel\r\nimport org.koin.dsl.module.module\r\n\r\nval models = module {\r\n    viewModel{\r\n        SplashViewModel()\r\n    }\r\n    viewModel {\r\n        LoginViewModel(get())\r\n    }\r\n    viewModel {\r\n        SignUpViewModel(get())\r\n    }\r\n    viewModel {\r\n        MainViewModel(get())\r\n    }\r\n    viewModel {\r\n        HomeViewModel()\r\n    }\r\n    viewModel {\r\n        OrderViewModel(get())\r\n    }\r\n    viewModel {\r\n        AddNewProductViewModel(get())\r\n    }\r\n    viewModel {\r\n        GoogleMapViewmodel(get())\r\n    }\r\n    viewModel {\r\n        ConfirmOrderViewModel(get())\r\n    }\r\n    viewModel {\r\n        FollowTrackingViewModel()\r\n    }\r\n}\r\n\r\nval impls = module {\r\n    single<AuthenticationRepository>  {\r\n        AuthenticationRepositoryImpl()\r\n    }\r\n\r\n    single<OrderRepository>  {\r\n        OrderRepositoryImpl()\r\n    }\r\n\r\n    single<GoogleMapRepo>  {\r\n        GoogleMapRepoImpl()\r\n    }\r\n}\r\n\r\nval utilities = module{\r\n    single<ResourceProvider> { AndroidResourceProvider(get()) }\r\n}\r\n\r\nval modules = listOf(utilities, models,dialogs, impls)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bettinalogistics/di/modules.kt b/app/src/main/java/com/example/bettinalogistics/di/modules.kt
--- a/app/src/main/java/com/example/bettinalogistics/di/modules.kt	
+++ b/app/src/main/java/com/example/bettinalogistics/di/modules.kt	
@@ -46,7 +46,7 @@
         ConfirmOrderViewModel(get())
     }
     viewModel {
-        FollowTrackingViewModel()
+        FollowTrackingViewModel(get())
     }
 }
 
@@ -62,6 +62,10 @@
     single<GoogleMapRepo>  {
         GoogleMapRepoImpl()
     }
+
+    single<FollowTrackingRepo>  {
+        FollowTrackingRepoImpl()
+    }
 }
 
 val utilities = module{
Index: app/src/main/res/layout/item_order_follow.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_order_follow.xml b/app/src/main/res/layout/item_order_follow.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/item_order_follow.xml	
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tool="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@color/merchant_color_ffffff"
+    android:padding="@dimen/_16dp">
+
+    <androidx.appcompat.widget.AppCompatImageView
+        android:id="@+id/ivOrderStatusItem"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        app:srcCompat="@drawable/ic_order_process" />
+
+    <com.example.baseapp.view.Textview
+        android:id="@+id/tvAmountOrderItem"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentEnd="true"
+        app:cusfont="Bold"
+        android:maxLines="1"
+        android:textColor="@color/merchant_color_004a9c"
+        android:textSize="@dimen/_16sp"
+        tool:text="99.120 đ" />
+
+    <com.example.baseapp.view.Textview
+        android:id="@+id/tvOrderStatusItem"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/tvAmountOrderItem"
+        android:layout_alignParentEnd="true"
+        android:layout_marginTop="@dimen/_2dp"
+        android:maxLines="1"
+        android:textColor="@color/merchant_color_004a9c"
+        android:textSize="@dimen/_16sp"
+        app:cusfont="Regular"
+        tool:text="Thanh cong" />
+
+    <com.example.baseapp.view.Textview
+        android:id="@+id/tvOrderCode"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="@dimen/dp8"
+        android:layout_toStartOf="@id/tvAmountOrderItem"
+        android:layout_toEndOf="@id/ivOrderStatusItem"
+        android:ellipsize="end"
+        android:maxLines="1"
+        android:textColor="@color/merchant_color_4a4a4a"
+        android:textSize="@dimen/_16sp"
+        app:cusfont="Bold"
+        tool:text="Nguyen Van Anh" />
+
+    <com.example.baseapp.view.Textview
+        android:id="@+id/tvTransportType"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/tvOrderCode"
+        android:layout_marginHorizontal="@dimen/dp8"
+        android:layout_marginTop="@dimen/_2dp"
+        android:layout_toStartOf="@id/tvOrderStatusItem"
+        android:layout_toEndOf="@id/ivOrderStatusItem"
+        android:ellipsize="end"
+        android:maxLines="1"
+        android:textColor="@color/merchant_color_a2a2a5"
+        android:textSize="@dimen/_16sp"
+        app:cusfont="Regular"
+        tool:text="Nguyen Van Anh" />
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/item_transaction_date.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_transaction_date.xml b/app/src/main/res/layout/item_transaction_date.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/item_transaction_date.xml	
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.appcompat.widget.LinearLayoutCompat xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tool="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:background="@color/merchant_color_f8f8f9"
+    android:paddingHorizontal="@dimen/_16dp"
+    android:paddingTop="@dimen/dp18"
+    android:paddingBottom="@dimen/_10dp">
+
+    <com.example.baseapp.view.Textview
+        android:id="@+id/tvDate"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_weight="1"
+        app:cusfont="SemiBold"
+        android:textColor="@color/merchant_color_a2a2a5"
+        tool:text="Hom qua, 16/09/2022" />
+
+    <com.example.baseapp.view.Textview
+        android:id="@+id/tvTranAmount"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="@dimen/_16dp"
+        app:cusfont="SemiBold"
+        android:gravity="end"
+        android:textColor="@color/merchant_color_a2a2a5"
+        tool:text="03 giao dịch" />
+</androidx.appcompat.widget.LinearLayoutCompat>
\ No newline at end of file
Index: app/src/main/java/com/example/bettinalogistics/ui/fragment/followtrask/FollowOrderTrackingAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bettinalogistics/ui/fragment/followtrask/FollowOrderTrackingAdapter.kt b/app/src/main/java/com/example/bettinalogistics/ui/fragment/followtrask/FollowOrderTrackingAdapter.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/example/bettinalogistics/ui/fragment/followtrask/FollowOrderTrackingAdapter.kt	
@@ -0,0 +1,93 @@
+package com.example.bettinalogistics.ui.fragment.followtrask
+
+import android.view.View
+import android.widget.ImageView
+import android.widget.TextView
+import com.example.baseapp.BaseRclvAdapter
+import com.example.baseapp.BaseRclvVH
+import com.example.baseapp.view.getAmountVND
+import com.example.baseapp.view.setSafeOnClickListener
+import com.example.bettinalogistics.R
+import com.example.bettinalogistics.model.CommonEntity
+import com.example.bettinalogistics.model.Order
+import com.example.bettinalogistics.utils.DataConstant
+import com.example.bettinalogistics.utils.DataConstant.Companion.ORDER_STATUS_CANCEL
+import com.example.bettinalogistics.utils.DataConstant.Companion.ORDER_STATUS_PAYMENT_PAID
+import com.example.bettinalogistics.utils.DataConstant.Companion.ORDER_STATUS_PAYMENT_WAITING
+
+class FollowOrderTrackingAdapter : BaseRclvAdapter() {
+    companion object {
+        const val TYPE_DATE = 1
+    }
+
+    var onItemClickListener: ((Order) -> Unit)? = null
+
+    override fun getLayoutResource(viewType: Int): Int =
+        when (viewType) {
+            TYPE_DATE -> R.layout.item_transaction_date
+            else -> R.layout.item_order_follow
+        }
+
+    override fun onCreateVH(itemView: View, viewType: Int): BaseRclvVH<*> = when (viewType) {
+        TYPE_DATE -> DateHistoryViewHolder(itemView)
+        else -> FollowOrderViewHolder(itemView)
+    }
+
+    override fun getItemViewType(position: Int): Int {
+        if (mDataSet[position] is CommonEntity)
+            return TYPE_DATE
+        return super.getItemViewType(position)
+    }
+
+    inner class FollowOrderViewHolder(itemView: View) : BaseRclvVH<Order>(itemView) {
+        private val tvOrderCode: TextView by lazy { itemView.findViewById(R.id.tvOrderCode) }
+        private val tvTransportType: TextView by lazy { itemView.findViewById(R.id.tvTransportType) }
+        private val tvAmountOrderItem: TextView by lazy { itemView.findViewById(R.id.tvAmountOrderItem) }
+        private val tvOrderStatusItem: TextView by lazy { itemView.findViewById(R.id.tvOrderStatusItem) }
+        private val ivOrderStatusItem: ImageView by lazy { itemView.findViewById(R.id.ivOrderStatusItem) }
+
+        init {
+            itemView.setSafeOnClickListener {
+                if (bindingAdapterPosition > -1) {
+                    onItemClickListener?.invoke(mDataSet[bindingAdapterPosition] as Order)
+                }
+            }
+        }
+
+        override fun onBind(data: Order) {
+            tvOrderCode.text = data.code ?: ""
+            tvTransportType.text = data.typeTransportation ?: ""
+            tvAmountOrderItem.text = data.amountBeforeDiscount.toString().getAmountVND()
+            tvOrderStatusItem.text = data.statusOrder
+            ivOrderStatusItem.setImageResource(getIconOrder(data.statusOrder))
+        }
+    }
+
+    fun getIconOrder(status: String?): Int {
+        val listSuccessPayment = listOf(DataConstant.ORDER_STATUS_DELIVERED, DataConstant.ORDER_STATUS_CONFIRM, ORDER_STATUS_PAYMENT_PAID)
+        val listFailedPayment = listOf(ORDER_STATUS_CANCEL)
+        val listProcessPayment = listOf(DataConstant.ORDER_STATUS_PENDING, ORDER_STATUS_PAYMENT_WAITING)
+        return when {
+            listSuccessPayment.contains(status) -> {
+                R.drawable.ic_order_success
+            }
+            listFailedPayment.contains(status) -> {
+                R.drawable.ic_order_fail
+            }
+            else -> {
+                R.drawable.ic_order_process
+            }
+        }
+    }
+
+    inner class DateHistoryViewHolder(itemView: View) : BaseRclvVH<CommonEntity>(itemView) {
+        private val tvDate: TextView by lazy { itemView.findViewById(R.id.tvDate) }
+        private val tvAmount: TextView by lazy { itemView.findViewById(R.id.tvTranAmount) }
+
+        override fun onBind(data: CommonEntity) {
+            tvDate.text = data.title
+            tvAmount.text = data.description
+        }
+    }
+}
+
Index: app/src/main/java/com/example/bettinalogistics/utils/Utils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.bettinalogistics.utils\r\n\r\nimport android.content.Context\r\nimport android.text.TextUtils\r\nimport android.util.Log\r\nimport android.util.Patterns\r\nimport android.widget.ImageView\r\nimport com.bumptech.glide.Glide\r\nimport com.example.baseapp.di.Common\r\nimport com.example.baseapp.view.safeLog\r\nimport com.example.bettinalogistics.utils.AppConstant.Companion.KEY_SEARCH_HISTORY\r\nimport com.example.bettinalogistics.utils.AppConstant.Companion.TAG\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics\r\nimport com.google.gson.Gson\r\nimport com.google.gson.GsonBuilder\r\nimport com.google.gson.reflect.TypeToken\r\nimport java.util.regex.Pattern\r\n\r\nclass Utils private constructor() {\r\n    companion object {\r\n        const val EN_LANG = \"EN\"\r\n        const val VN_LANG = \"VI\"\r\n        private var instance: Utils? = null\r\n\r\n        @JvmStatic\r\n        fun g(): Utils {\r\n            if (instance == null) instance = Utils()\r\n            return instance!!\r\n        }\r\n    }\r\n\r\n    private var gson: Gson? = null\r\n\r\n    //Validate tên quá dài\r\n    fun getFullNameShort(value: String): String? {\r\n        var data = \"\"\r\n        if (data.length >= 13) {\r\n            data = value.substring(0, 13)+ \"...\";\r\n        } else {\r\n            data = value;\r\n        }\r\n        return data\r\n    }\r\n\r\n    fun provideGson(): Gson {\r\n        if (gson == null) gson = GsonBuilder().disableHtmlEscaping().create()\r\n        return gson!!\r\n    }\r\n\r\n    //Convert data json save\r\n    fun <T> getObjectFromJson(json: String, classOfT: Class<T>?): T? {\r\n        return try {\r\n            provideGson().fromJson(json, classOfT)\r\n        } catch (e: Exception) {\r\n            Log.d(TAG, \"getObjectFromJson: $e\")\r\n            null\r\n        }\r\n    }\r\n\r\n    fun <T> getJsonFromObject(ob: T): String? {\r\n        return try {\r\n            provideGson().toJson(ob)\r\n        } catch (e: Exception) {\r\n            null\r\n        }\r\n    }\r\n\r\n    fun isValidEmail(target: CharSequence): Boolean {\r\n        return !TextUtils.isEmpty(target) && Patterns.EMAIL_ADDRESS.matcher(target).matches()\r\n    }\r\n\r\n    fun verifyPassword(pass: String): Boolean {\r\n        return Pattern.compile(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,50}\\$\").matcher(pass)\r\n            .matches()\r\n    }\r\n\r\n    fun verifyLengthPass(pass: String): Boolean {\r\n        return pass.length in 8..50\r\n    }\r\n    // lưu dữ liệu trong SharedPreferences\r\n    fun saveDataString(key: String, value: String?){\r\n        val sharedPreference =  Common.currentActivity?.getSharedPreferences(\"PREFERENCE_LOGISTICS_NAME\", Context.MODE_PRIVATE)\r\n        val editor = sharedPreference?.edit()\r\n        editor?.putString(key,value)\r\n        editor?.apply()\r\n    }\r\n\r\n    fun saveDataLong(key: String, value: Long){\r\n        val sharedPreference =  Common.currentActivity?.getSharedPreferences(\"PREFERENCE_LOGISTICS_NAME\", Context.MODE_PRIVATE)\r\n        val editor = sharedPreference?.edit()\r\n        editor?.putLong(key,value)\r\n        editor?.apply()\r\n    }\r\n\r\n    fun saveDataBoolean(key: String, value: Boolean){\r\n        val sharedPreference =  Common.currentActivity?.getSharedPreferences(\"PREFERENCE_LOGISTICS_NAME\", Context.MODE_PRIVATE)\r\n        val editor = sharedPreference?.edit()\r\n        editor?.putBoolean(key,value)\r\n        editor?.apply()\r\n    }\r\n\r\n    fun saveDataInt(key: String, value: Int){\r\n        val sharedPreference =  Common.currentActivity?.getSharedPreferences(\"PREFERENCE_LOGISTICS_NAME\", Context.MODE_PRIVATE)\r\n        val editor = sharedPreference?.edit()\r\n        editor?.putInt(key,value)\r\n        editor?.apply()\r\n    }\r\n\r\n    fun getDataString(key: String) : String?{\r\n        val sharedPreference =  Common.currentActivity?.getSharedPreferences(\"PREFERENCE_LOGISTICS_NAME\", Context.MODE_PRIVATE)\r\n        return  sharedPreference?.getString(key, null)\r\n    }\r\n\r\n    fun getDataBoolean(key: String) : Boolean?{\r\n        val sharedPreference =  Common.currentActivity?.getSharedPreferences(\"PREFERENCE_LOGISTICS_NAME\", Context.MODE_PRIVATE)\r\n        return  sharedPreference?.getBoolean(key,false)\r\n    }\r\n\r\n    fun getDataLong(key: String) : Long?{\r\n        val sharedPreference =  Common.currentActivity?.getSharedPreferences(\"PREFERENCE_LOGISTICS_NAME\", Context.MODE_PRIVATE)\r\n        return  sharedPreference?.getLong(key,-1L)\r\n    }\r\n\r\n    fun getDataInt(key: String) : Int?{\r\n        val sharedPreference =  Common.currentActivity?.getSharedPreferences(\"PREFERENCE_LOGISTICS_NAME\", Context.MODE_PRIVATE)\r\n        return  sharedPreference?.getInt(key,-1)\r\n    }\r\n\r\n    fun setSearchHistory(type: Int, searchKey: String, isDelete: Boolean = false) {\r\n        val searchKeysStorage =\r\n            Utils.g().provideGson()\r\n                .fromJson(getDataString(KEY_SEARCH_HISTORY), object :\r\n                    TypeToken<HashMap<Int, MutableList<String>>>() {}.type)?:  HashMap<Int, MutableList<String>>()\r\n        if (isDelete) {\r\n            searchKeysStorage[type]?.remove(searchKey)\r\n        } else {\r\n            if (searchKeysStorage.containsKey(type)) {\r\n                if (searchKeysStorage[type]?.contains(searchKey) == true) {\r\n                    searchKeysStorage[type]?.remove(searchKey)\r\n                }\r\n                searchKeysStorage[type]?.add(0,searchKey)\r\n            } else {\r\n                searchKeysStorage[type] = mutableListOf(searchKey)\r\n            }\r\n        }\r\n        saveDataString(KEY_SEARCH_HISTORY, g().provideGson().toJson(searchKeysStorage))\r\n    }\r\n\r\n    fun getSearchKeyInStorage(): Map<Int, MutableList<String>> {\r\n        return provideGson().fromJson(\r\n                    getDataString(KEY_SEARCH_HISTORY), object :\r\n                        TypeToken<HashMap<Int, MutableList<String>>>() {}.type)?: HashMap<Int, MutableList<String>>()\r\n    }\r\n\r\n    fun clearHistory(type:Int){\r\n        val searchKeysStorage =  provideGson().fromJson(\r\n            getDataString(KEY_SEARCH_HISTORY), object :\r\n                TypeToken<HashMap<Int, MutableList<String>>>() {}.type)?: HashMap<Int, MutableList<String>>()\r\n        searchKeysStorage[type]?.clear()\r\n        saveDataString(KEY_SEARCH_HISTORY, provideGson().toJson(searchKeysStorage))\r\n    }\r\n\r\n    fun send(data: String?) {\r\n        try {\r\n            FirebaseCrashlytics.getInstance().log(data ?: \"\")\r\n        } catch (e: Exception) {\r\n            e.safeLog()\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bettinalogistics/utils/Utils.kt b/app/src/main/java/com/example/bettinalogistics/utils/Utils.kt
--- a/app/src/main/java/com/example/bettinalogistics/utils/Utils.kt	
+++ b/app/src/main/java/com/example/bettinalogistics/utils/Utils.kt	
@@ -14,6 +14,8 @@
 import com.google.gson.Gson
 import com.google.gson.GsonBuilder
 import com.google.gson.reflect.TypeToken
+import java.text.ParseException
+import java.text.SimpleDateFormat
 import java.util.regex.Pattern
 
 class Utils private constructor() {
@@ -65,6 +67,16 @@
         }
     }
 
+    fun convertDate(fromFormat: String?, toFormat: String?, strDate: String): String {
+        try {
+            val simpleDateFormat = SimpleDateFormat(fromFormat)
+            val simpleTo = SimpleDateFormat(toFormat)
+            return simpleTo.format(simpleDateFormat.parse(strDate))
+        } catch (ex: ParseException) {
+        }
+        return strDate
+    }
+
     fun isValidEmail(target: CharSequence): Boolean {
         return !TextUtils.isEmpty(target) && Patterns.EMAIL_ADDRESS.matcher(target).matches()
     }
Index: app/src/main/java/com/example/bettinalogistics/utils/Utils_Date.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/bettinalogistics/utils/Utils_Date.kt b/app/src/main/java/com/example/bettinalogistics/utils/Utils_Date.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/example/bettinalogistics/utils/Utils_Date.kt	
@@ -0,0 +1,215 @@
+package com.example.bettinalogistics.utils
+
+import android.text.TextUtils
+import java.text.DateFormat
+import java.text.ParseException
+import java.text.SimpleDateFormat
+import java.util.*
+
+object Utils_Date {
+    const val DATE_PATTERN_ddMMYYYY = "dd/MM/yyyy"
+    const val DATE_PATTERN_yyyyMMdd = "yyyyMMdd"
+    const val DATE_PATTERN_yyyyMMdd_2 = "yyyy-MM-dd"
+    const val RE_DATE_PATTERN_yyyyMMdd_2 = "dd-MM-yyyy"
+    const val DATE_PATTERN_EEEEddMMYYYY = "EEEE dd/MM/yyyy"
+    const val DATE_PATTERN_yyyyMMddEEEE = "yyyy/MM/dd EEEE"
+    const val DATE_PATTERN_EEEETMYYYY = "dd,EEEE,'T.'M yyyy"
+    const val DATE_PATTERN_DDM = "dd 'thg' M"
+    const val DATE_PATTERN_DDM_EN = "dd MMM"
+    const val DATE_PATTERN_YYYYMMDD_HH_MM = "yyyy-MM-dd HH:mm"
+    const val DATE_PATTERN_HH_MM = "HH:mm"
+    const val DATE_PATTERN_YYYY_MM_DD_HH_MM_SS = "yyyy-MM-dd HH:mm:ss"
+    const val FULLTIME_FORMAT_yyyyMMddHHmmss = "yyyyMMddHHmmss"
+    const val FULLTIME_FORMAT_MMddHHmmss = "MMddHHmmss"
+    const val DATE_PATTERN_SS_MM_HH_DD_MM_YYYY = "HH:mm:ss dd/MM/yyyy"
+    const val DATE_PATTERN_SS_MM_HH_DD_MM_YYYY_V2 = "HH:mm:ss dd-MM-yyyy"
+    const val DATE_PATTERN_HH_MM_DD_MM_YYYY = "HH:mm dd/MM/yyyy"
+    const val DATE_PATTERN_MM_HH_DD_MM_YYYY = "mm:HH dd/MM/yyyy"
+    const val DATE_PATTERN_YYYY_MM_DD_HH_MM = "yyyy-MM-dd HH:mm"
+    const val DATE_PATTERN_YYYYMMDDHHMM = "yyyyMMddHHmm"
+    const val DATE_PATTERN_DD_MM_YYYY = "dd/MM/yyyy',' HH:mm"
+    const val DATE_PATTERN_DD_MM_YYYY_HH_MM_SS = "dd/MM/yyyy HH:mm:ss"
+    const val DATE_PATTERN_MM_HH_DD_MM = "HH:mm dd/MM"
+    const val DATE_PATTERN_HH_MM_SS = "HH:mm:ss"
+
+    fun getCurrentTimeByFormat(format: String): String {
+        val milliseconds = System.currentTimeMillis()
+        val sdf = SimpleDateFormat(format)
+        val resultdate = Date(milliseconds)
+        return sdf.format(resultdate)
+    }
+
+    fun getCurrentTimeByFormat(format: String, timeMillis: Long): String {
+        val sdf = SimpleDateFormat(format)
+        val resultdate = Date(timeMillis)
+        return sdf.format(resultdate)
+    }
+
+    fun convertDate(fromFormat: String, toFormat: String, strDate: String): String {
+        try {
+            val simpleDateFormat = SimpleDateFormat(fromFormat)
+            val simpleTo = SimpleDateFormat(toFormat)
+            return simpleTo.format(simpleDateFormat.parse(strDate))
+        } catch (ex: ParseException) {
+        }
+        return strDate
+    }
+
+    val billTime: String
+        get() {
+            val milliseconds = System.currentTimeMillis()
+            val sdf = SimpleDateFormat(DATE_PATTERN_HH_MM_DD_MM_YYYY)
+            return sdf.format(Date(milliseconds))
+        }
+    val createBillTime: String
+        get() {
+            val milliseconds = System.currentTimeMillis()
+            val sdf = SimpleDateFormat(DATE_PATTERN_SS_MM_HH_DD_MM_YYYY)
+            return sdf.format(Date(milliseconds))
+        }
+
+    fun getCreateBillTimeFromString(billTime: String): Long {
+        if (TextUtils.isEmpty(billTime)) return -1
+        val df: DateFormat = SimpleDateFormat(DATE_PATTERN_SS_MM_HH_DD_MM_YYYY, Locale.getDefault())
+        try {
+            return df.parse(billTime).time
+        } catch (ex: Exception) {
+        }
+        return -1
+    }
+
+    fun convertformDate(dateTime: Date, convertPattern: String): String {
+        if (dateTime == null) return ""
+        val sdf2 = SimpleDateFormat(convertPattern, Locale.getDefault())
+        return sdf2.format(dateTime)
+    }
+
+    fun getTimeByMiliseconds(time: String, timeFormat: String): String {
+        return try {
+            val date = Date(time.toLong())
+            convertformDate(date, timeFormat)
+        } catch (ex: Exception) {
+            ""
+        }
+    }
+
+    fun getTimeByMiliseconds(timeStamp: Long, timeFormat: String): String {
+        return try {
+            convertformDate(Date(timeStamp), timeFormat)
+        } catch (ex: Exception) {
+            ""
+        }
+    }
+
+    fun convertDateFromString(time: String, format: String?): String {
+        val date = Date(time.toLong())
+        val date1 = SimpleDateFormat(format, Locale.getDefault())
+        return date1.format(date)
+    }
+
+    fun dateToString(date: Date, pattern: String): String {
+        val dateFormat: DateFormat = SimpleDateFormat(pattern, Locale.getDefault())
+        return dateFormat.format(date)
+    }
+
+    fun stringToDate(dateString: String, pattern: String): Date {
+        val dateFormat: DateFormat = SimpleDateFormat(pattern, Locale.getDefault())
+        return dateFormat.parse(dateString)
+    }
+
+    fun changeDateFormat(s: String, beforePattern: String, afterPattern: String): String {
+        val dateFormat: DateFormat = SimpleDateFormat(beforePattern, Locale.getDefault())
+        val sdf1: DateFormat = SimpleDateFormat(afterPattern, Locale.getDefault())
+        return try {
+            val date = dateFormat.parse(s)
+            sdf1.format(date)
+        } catch (e: ParseException) {
+            ""
+        }
+    }
+
+    fun changeDateFormatHistory(s: String): String {
+        val dateFormat: DateFormat =
+            SimpleDateFormat(FULLTIME_FORMAT_yyyyMMddHHmmss, Locale.getDefault())
+        val sdf1: DateFormat = SimpleDateFormat(DATE_PATTERN_MM_HH_DD_MM_YYYY, Locale.getDefault())
+        return try {
+            val date = dateFormat.parse(s)
+            sdf1.format(date)
+        } catch (e: ParseException) {
+            ""
+        }
+    }
+
+    fun changeDateFormatSearch(s: String): String {
+        val dateFormat: DateFormat = SimpleDateFormat(DATE_PATTERN_ddMMYYYY, Locale.getDefault())
+        val sdf1: DateFormat = SimpleDateFormat(DATE_PATTERN_yyyyMMdd, Locale.getDefault())
+        return try {
+            val date = dateFormat.parse(s)
+            sdf1.format(date)
+        } catch (e: ParseException) {
+            ""
+        }
+    }
+
+    fun calculateAfterDateForMonth(date: String, numberOfMonth: Int): String {
+        val sdf = SimpleDateFormat(DATE_PATTERN_yyyyMMdd, Locale.getDefault())
+        val calculateDate: Date
+        return try {
+            calculateDate = sdf.parse(date) as Date
+            val calendar = Calendar.getInstance()
+            calendar.time = calculateDate
+            calendar.add(Calendar.MONTH, numberOfMonth)
+            sdf.format(calendar.time)
+        } catch (e: ParseException) {
+            ""
+        }
+    }
+
+    fun calculateAfterDateForDay(date: String, numberOfDay: Int, pattern: String): String {
+        val sdf = SimpleDateFormat(pattern, Locale.getDefault())
+        val calculateDate: Date
+        return try {
+            calculateDate = sdf.parse(date) as Date
+            val calendar = Calendar.getInstance()
+            calendar.time = calculateDate
+            calendar.add(Calendar.DAY_OF_WEEK, numberOfDay)
+            calendar.set(Calendar.HOUR_OF_DAY, 0)
+            calendar.set(Calendar.MINUTE, 0)
+            calendar.set(Calendar.SECOND, 0)
+            sdf.format(calendar.time)
+        } catch (e: ParseException) {
+            ""
+        }
+    }
+
+    fun getFirstDayOfCurrentMonth(pattern: String): String {
+        val sdf = SimpleDateFormat(pattern, Locale.getDefault())
+        val calendar = Calendar.getInstance()
+        calendar[Calendar.DAY_OF_MONTH] = 1
+        calendar[Calendar.HOUR_OF_DAY] = calendar.getActualMinimum(Calendar.HOUR_OF_DAY)
+        calendar[Calendar.MINUTE] = calendar.getMinimum(Calendar.MINUTE)
+        calendar[Calendar.SECOND] = calendar.getMinimum(Calendar.SECOND)
+        return sdf.format(calendar.time)
+    }
+
+    fun getFirstDayOfPreMonth(pattern: String): String {
+        val sdf = SimpleDateFormat(pattern, Locale.getDefault())
+        val calendar = Calendar.getInstance()
+        calendar.add(Calendar.MONTH, -1)
+        calendar[Calendar.DAY_OF_MONTH] = 1
+        calendar[Calendar.HOUR_OF_DAY] = calendar.getActualMinimum(Calendar.HOUR_OF_DAY)
+        calendar[Calendar.MINUTE] = calendar.getMinimum(Calendar.MINUTE)
+        calendar[Calendar.SECOND] = calendar.getMinimum(Calendar.SECOND)
+        return sdf.format(calendar.time)
+    }
+
+    fun getCurrentDay(pattern: String): String {
+        val sdf = SimpleDateFormat(pattern, Locale.getDefault())
+        val calendar = Calendar.getInstance()
+        calendar[Calendar.HOUR_OF_DAY] = calendar.getActualMinimum(Calendar.HOUR_OF_DAY)
+        calendar[Calendar.MINUTE] = calendar.getMinimum(Calendar.MINUTE)
+        calendar[Calendar.SECOND] = calendar.getMinimum(Calendar.SECOND)
+        return sdf.format(calendar.time)
+    }
+
+}
\ No newline at end of file
